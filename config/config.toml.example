# Configuration for the RestInPieces application

# Path to the SQLite database file.
db_path = "app.db"

# Directory containing static web assets (relative to application root).
# These assets can be embedded in the binary or served from the filesystem.
public_dir = "static/dist"

# --- Server Settings ---
[server]
  # Network address and port the HTTP server listens on.
  # Examples: ":8080" (all interfaces, port 8080), "localhost:9000"
  addr = ":8080"

  # Maximum duration the server waits for ongoing requests to complete before shutting down.
  shutdown_graceful_timeout = "15s"

  # Maximum duration for reading the entire request, including the body.
  read_timeout = "2s"

  # Maximum duration for reading only the request headers.
  read_header_timeout = "2s"

  # Maximum duration before timing out writes of the response.
  write_timeout = "3s"

  # Maximum duration for waiting for the next request on a keep-alive connection.
  idle_timeout = "1m"

  # If behind a trusted proxy, specify the header containing the real client IP.
  # Common values: "X-Forwarded-For", "X-Real-IP". Leave empty if not behind a proxy.
  client_ip_proxy_header = ""

  # Enable HTTPS/TLS for secure connections
  enable_tls = false

  # Path to TLS certificate file (PEM format)
  cert_file = ""

  # Path to TLS private key file (PEM format)
  key_file = ""

  # PEM-encoded TLS certificate data (alternative to cert_file)
  cert_data = ""

  # PEM-encoded TLS private key data (alternative to key_file)
  key_data = ""

  # Address for HTTP->HTTPS redirect server (e.g. ":80")
  # Only used when enable_tls is true
  redirect_addr = ""

# --- JWT Settings ---
[jwt]
  # Duration for which standard authentication tokens are valid.
  auth_token_duration = "45m"

  # Duration for which email verification tokens are valid.
  verification_email_token_duration = "24h"

  # Duration for which password reset tokens are valid.
  password_reset_token_duration = "1h"

  # Duration for which email change confirmation tokens are valid.
  email_change_token_duration = "1h"

  # AuthSecret: Set via JWT_AUTH_SECRET environment variable. DO NOT STORE HERE unless absolutely necessary for local dev.
  auth_secret = "<secret_32_bytes_at_least_not_safe_to_put_here_x>" # Example placeholder

  # VerificationEmailSecret: Set via JWT_VERIFICATION_EMAIL_SECRET environment variable. DO NOT STORE HERE.
  verification_email_secret = "<secret_32_bytes_at_least_not_safe_to_put_here_x>" # Example placeholder

  # PasswordResetSecret: Set via JWT_PASSWORD_RESET_SECRET environment variable. DO NOT STORE HERE.
  password_reset_secret = "<secret_32_bytes_at_least_not_safe_to_put_here_x>" # Example placeholder

  # EmailChangeSecret: Set via JWT_EMAIL_CHANGE_SECRET environment variable. DO NOT STORE HERE.
  email_change_secret = "<secret_32_bytes_at_least_not_safe_to_put_here_x>" # Example placeholder

# --- IP Blocking Settings ---
# Settings related to automatic IP address blocking based on request frequency.
[block_ip]
  # Enable or disable automatic IP blocking.
  enabled = true


# --- Maintenance Mode Settings ---
[maintenance]
  # Enable or disable the maintenance mode feature entirely.
  # If false, the middleware won't even run, regardless of 'activated'.
  enabled = true

  # Activate or deactivate the maintenance mode.
  # If true (and enabled=true), the maintenance page/message will be shown.
  activated = false


# --- ACME / Let's Encrypt Settings ---
[acme]
  # Enable automatic TLS certificate management using ACME (e.g., Let's Encrypt).
  # Requires server.enable_tls = true and server.cert_file/key_file to be set.
  enabled = false

  # Email address for ACME account registration and important notifications (e.g., expiry warnings).
  email = "your-email@example.com"

  # List of domain names to include in the certificate. The first domain is the primary common name (CN).
  domains = ["yourdomain.com", "www.yourdomain.com"]

  # DNS provider used for the DNS-01 challenge. Currently, only "cloudflare" is supported by the handler.
  dns_provider = "cloudflare" # e.g., "cloudflare"

  # Renew the certificate if it expires within this many days. Let's Encrypt recommends 30 days.
  renewal_days_before_expiry = 30

  # ACME directory URL. Use Let's Encrypt staging for testing, production for live certs.
  # Staging: "https://acme-staging-v02.api.letsencrypt.org/directory"
  # Production: "https://acme-v02.api.letsencrypt.org/directory"
  ca_directory_url = "https://acme-staging-v02.api.letsencrypt.org/directory"

  # Cloudflare API Token for DNS-01 challenge validation.
  # Set via ACME_CLOUDFLARE_API_TOKEN environment variable. DO NOT STORE HERE.
  cloudflare_api_token = "" # Example placeholder - set via environment variable in production

  # ACME account private key (ECDSA P-256 in PEM format).
  # Set via ACME_LETSENCRYPT_PRIVATE_KEY environment variable. DO NOT STORE HERE.
  # Generate with: openssl ecparam -name prime256v1 -genkey -noout -outform PEM
  acme_private_key = "" # Example placeholder - set via environment variable in production


# --- Background Job Scheduler Settings ---
[scheduler]
  # How often the scheduler checks the database for pending jobs.
  interval = "60s"

  # Maximum number of jobs fetched from the database in each interval.
  # Prevents overwhelming workers if the queue is large.
  max_jobs_per_tick = 10

  # Number of concurrent job processing workers per available CPU core.
  # Increase for I/O-bound jobs, decrease for CPU-bound jobs.
  concurrency_multiplier = 2


# --- Rate Limiting Settings ---
[rate_limits]
  # Minimum time a user must wait between requesting password resets for the same account.
  password_reset_cooldown = "2h"

  # Minimum time a user must wait between requesting email verifications for the same email.
  email_verification_cooldown = "1h"

  # Minimum time a user must wait between requesting email address changes.
  email_change_cooldown = "1h"



# --- SMTP Settings for Sending Emails ---
[smtp]
  # Enable or disable SMTP functionality. Set to true to allow sending emails.
  enabled = false

  # SMTP server hostname or IP address.
  host = "smtp.gmail.com" # Example: Gmail

  # SMTP server port (e.g., 587 for TLS/STARTTLS, 465 for SSL, 25 for unencrypted).
  port = 587 # Example: Gmail STARTTLS

  # Display name for the sender (e.g., "My Application").
  from_name = "My App"

  # Email address emails will be sent from (e.g., "noreply@example.com").
  # For Gmail, this might need to be the same as Username or a configured alias.
  # Load from ENV recommended: e.g., SMTP_FROM_ADDRESS
  from_address = "" # Set via environment variable SMTP_FROM_ADDRESS

  # Domain name sent during HELO/EHLO handshake. Defaults to "localhost".
  # Set to your application's domain name for better deliverability.
  local_name = ""

  # Authentication method: "plain", "login", "cram-md5", or "none".
  auth_method = "plain" # Example: Gmail requires PLAIN

  # Use explicit TLS (connects directly using TLS, usually port 465).
  use_tls = false

  # Use STARTTLS (connects unencrypted, then upgrades to TLS, usually port 587).
  use_start_tls = true # Example: Gmail requires STARTTLS on port 587

  # Username: SMTP account username. Set via SMTP_USERNAME environment variable. DO NOT STORE HERE.
  username = "" # Example placeholder - set via environment variable in production

  # Password: SMTP account password or app-specific password. Set via SMTP_PASSWORD environment variable. DO NOT STORE HERE.
  password = "" # Example placeholder - set via environment variable in production


# --- API Endpoint Paths ---
[endpoints]
  refresh_auth              = "POST /api/refresh-auth"
  request_email_verification = "POST /api/request-email-verification"
  confirm_email_verification = "POST /api/confirm-email-verification"
  list_endpoints            = "GET /api/list-endpoints"
  auth_with_password         = "POST /api/auth-with-password"
  auth_with_oauth2           = "POST /api/auth-with-oauth2"
  register_with_password     = "POST /api/register-with-password"
  list_oauth2_providers      = "GET /api/list-oauth2-providers"
  request_password_reset     = "POST /api/request-password-reset"
  confirm_password_reset     = "POST /api/confirm-password-reset"
  request_email_change       = "POST /api/request-email-change"
  confirm_email_change       = "POST /api/confirm-email-change"


# --- OAuth2 Provider Settings ---
# Define configurations for supported OAuth2 providers (e.g., Google, GitHub).
# Client IDs and Secrets MUST be loaded from environment variables.
[oauth2_providers]

  # Example configuration for Google OAuth2
  [oauth2_providers.google]
    name         = "google"
    display_name  = "Google"
    # redirect_url is the callback URL registered with the provider.
    # It's often constructed dynamically (e.g., BaseURL + "/oauth2/callback/google").
    # If set here, ensure it matches your provider configuration. Leave empty "" if dynamically set.
    redirect_url  = ""
    auth_url      = "https://accounts.google.com/o/oauth2/v2/auth"
    token_url     = "https://oauth2.googleapis.com/token"
    user_info_url  = "https://www.googleapis.com/oauth2/v3/userinfo"
    scopes       = ["https://www.googleapis.com/auth/userinfo.profile", "https://www.googleapis.com/auth/userinfo.email"]
    pkce         = true
    client_id = "" #Set via OAUTH2_GOOGLE_CLIENT_ID environment variable. DO NOT STORE HERE.
    client_secret= "" #Set via OAUTH2_GOOGLE_CLIENT_SECRET environment variable. DO NOT STORE HERE.

  # Example configuration for GitHub OAuth2
  [oauth2_providers.github]
    name         = "github"
    display_name  = "GitHub"
    # redirect_url is the callback URL registered with the provider.
    # It's often constructed dynamically (e.g., BaseURL + "/oauth2/callback/github").
    # If set here, ensure it matches your provider configuration. Leave empty "" if dynamically set.
    redirect_url  = ""
    auth_url      = "https://github.com/login/oauth/authorize"
    token_url     = "https://github.com/login/oauth/access_token"
    user_info_url  = "https://api.github.com/user"
    scopes       = ["read:user", "user:email"]
    pkce         = true
    client_id= "" # Set via OAUTH2_GITHUB_CLIENT_ID environment variable. DO NOT STORE HERE.
    client_secret= "" # Set via OAUTH2_GITHUB_CLIENT_SECRET environment variable. DO NOT STORE HERE.

# Add other providers (e.g., Facebook, Microsoft) here following the same pattern.
