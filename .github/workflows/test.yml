name: Test 

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Test with coverage
        run: go test -v -cover ./... -coverprofile=coverage.out -coverpkg=./...

      - name: Show coverage by package
        run: |
          echo "=== Package-level Coverage ==="
          go list ./... | grep -v "^$(go list -m)$" | while read pkg; do
            coverage=$(go test -cover "$pkg" 2>/dev/null | grep "coverage:" | awk '{print $5}')
            dir=$(echo "$pkg" | sed "s|^$(go list -m)||" | sed 's|^/||')
            
            if [ -n "$coverage" ] && [ "$coverage" != "statements" ]; then
              printf "%-25s %s\n" "$dir" "$coverage"
            else
              printf "%-25s %s\n" "$dir" "0.0%"
            fi
          done

      - name: Generate coverage badge
        run: |
          # Extract coverage percentage
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          
          # Determine badge color based on coverage
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
            COLOR="orange"
          else
            COLOR="red"
          fi
          
          # Create badge directory
          mkdir -p .github/badges
          
          # Generate SVG badge using shields.io format
          cat > .github/badges/coverage.svg << EOF
          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="104" height="20" role="img" aria-label="coverage: ${COVERAGE}%">
            <title>coverage: ${COVERAGE}%</title>
            <linearGradient id="s" x2="0" y2="100%">
              <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
              <stop offset="1" stop-opacity=".1"/>
            </linearGradient>
            <clipPath id="r">
              <rect width="104" height="20" rx="3" fill="#fff"/>
            </clipPath>
            <g clip-path="url(#r)">
              <rect width="61" height="20" fill="#555"/>
              <rect x="61" width="43" height="20" fill="$([ "$COLOR" = "brightgreen" ] && echo "#4c1" || [ "$COLOR" = "yellow" ] && echo "#dfb317" || [ "$COLOR" = "orange" ] && echo "#fe7d37" || echo "#e05d44")"/>
              <rect width="104" height="20" fill="url(#s)"/>
            </g>
            <g fill="#fff" text-anchor="middle" font-family="Verdana,Geneva,DejaVu Sans,sans-serif" text-rendering="geometricPrecision" font-size="110">
              <text aria-hidden="true" x="315" y="150" fill="#010101" fill-opacity=".3" transform="scale(.1)" textLength="510">coverage</text>
              <text x="315" y="140" transform="scale(.1)" fill="#fff" textLength="510">coverage</text>
              <text aria-hidden="true" x="815" y="150" fill="#010101" fill-opacity=".3" transform="scale(.1)" textLength="330">${COVERAGE}%</text>
              <text x="815" y="140" transform="scale(.1)" fill="#fff" textLength="330">${COVERAGE}%</text>
            </g>
          </svg>
          EOF

      - name: Commit badge
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if git diff --quiet HEAD -- .github/badges/coverage.svg; then
            echo "No changes to coverage badge"
          else
            git add .github/badges/coverage.svg
            COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
            git commit -m "Update coverage badge: $COVERAGE"
            git push
          fi
