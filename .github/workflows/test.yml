name: Test 

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Test with coverage
        run: go test -v -cover ./... -coverprofile=coverage.out -coverpkg=./...

      - name: Show coverage by package
        run: |
          echo "=== Package-level Coverage ==="
          go list ./... | grep -v "^$(go list -m)$" | while read pkg; do
            coverage=$(go test -cover "$pkg" 2>/dev/null | grep "coverage:" | awk '{print $5}')
            dir=$(echo "$pkg" | sed "s|^$(go list -m)||" | sed 's|^/||')
            
            if [ -n "$coverage" ] && [ "$coverage" != "statements" ]; then
              printf "%-25s %s\n" "$dir" "$coverage"
            else
              printf "%-25s %s\n" "$dir" "0.0%"
            fi
          done

      - name: Generate coverage endpoint
        run: |
          # Extract coverage percentage
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "COVERAGE=${COVERAGE}" >> $GITHUB_ENV
          
          # Determine badge color based on coverage
          if (( $(echo "$COVERAGE >= 75" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
            COLOR="orange"
          else
            COLOR="red"
          fi
          
          # Create badge directory
          mkdir -p .github/badges
          
          # Create a JSON endpoint for shields.io
          cat > .github/badges/coverage.json << EOF
          {
            "schemaVersion": 1,
            "label": "coverage",
            "message": "${COVERAGE}%",
            "color": "${COLOR}"
          }
          EOF

      - name: Commit coverage endpoint
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if git diff --quiet HEAD -- .github/badges/coverage.json; then
            echo "No changes to coverage endpoint"
          else
            git add .github/badges/coverage.json
            COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
            git commit -m "Update coverage endpoint: $COVERAGE"
            git pull --rebase
            git push
          fi
